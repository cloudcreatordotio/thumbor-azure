#!/usr/bin/python
# -*- coding: utf-8 -*-
import os
import json
from thumbor.config import Config

# Basic configuration
Config.THUMBOR_LOG_FORMAT = '%(asctime)s %(name)s:%(levelname)s %(message)s'
Config.THUMBOR_LOG_DATE_FORMAT = '%Y-%m-%d %H:%M:%S'
Config.ACCESS_LOG_FORMAT = '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"'

# Security
Config.SECURITY_KEY = os.environ.get('SECURITY_KEY', 'MY_SECURE_KEY_CHANGE_THIS_IN_PRODUCTION')
Config.ALLOW_UNSAFE_URL = os.environ.get('ALLOW_UNSAFE_URL', 'True').lower() == 'true'

# Make ALLOWED_SOURCES configurable via environment variable
allowed_sources_env = os.environ.get('ALLOWED_SOURCES', '')
if allowed_sources_env:
    try:
        Config.ALLOWED_SOURCES = json.loads(allowed_sources_env)
    except:
        # If JSON parsing fails, treat as empty list
        Config.ALLOWED_SOURCES = []
else:
    # For testing - allow all sources (empty list means all sources allowed)
    Config.ALLOWED_SOURCES = []
    # Example production sources:
    # Config.ALLOWED_SOURCES = [
    #     r'.+\.mywebsitename\.com',
    #     r'mywebsitename\.blob\.core\.windows\.net',
    #     r'(.*)\.?mywebsitename2\.com',
    #     r'mywebsitename3\.com',
    #
    # ]

# Paths and URLs
Config.UPLOAD_MAX_SIZE = 100 * 1024 * 1024  # 100MB
Config.UPLOAD_ENABLED = True
Config.UPLOAD_PUT_ALLOWED = True
Config.UPLOAD_DELETE_ALLOWED = False  # Set to False as per original config comment
Config.UPLOAD_PHOTO_STORAGE = 'thumbor.storages.file_storage'

# Quality and format settings
Config.QUALITY = 80
Config.AUTO_WEBP = True
Config.AUTO_PNG_TO_JPG = False  # Set to False as per original config comment
Config.WEBP_QUALITY = 80
Config.PNG_COMPRESSION_LEVEL = 6
Config.PROGRESSIVE_JPEG = True
Config.PILLOW_RESAMPLING_CV2_EQUIV = {
    'LANCZOS': 'INTER_LANCZOS4',
    'CUBIC': 'INTER_CUBIC',
    'HAMMING': 'INTER_AREA',
    'LINEAR': 'INTER_LINEAR'
}

# Image processing
Config.MAX_WIDTH = 3000
Config.MAX_HEIGHT = 3000
Config.MIN_WIDTH = 1
Config.MIN_HEIGHT = 1
Config.PRESERVE_EXIF_INFO = True
Config.RESPECT_ORIENTATION = True

# Storage configuration - Using mixed storage with Redis
Config.STORAGE = 'thumbor.storages.mixed_storage'
Config.MIXED_STORAGE_FILE_STORAGE = 'thumbor.storages.file_storage'
Config.MIXED_STORAGE_CRYPTO_STORAGE = 'thumbor.storages.no_storage'
Config.MIXED_STORAGE_DETECTOR_STORAGE = 'tc_redis.storages.redis_storage'

# File storage paths
Config.FILE_STORAGE_ROOT_PATH = '/data/thumbor/storage'

# Result storage - Using no_storage as per original config
Config.RESULT_STORAGE = 'thumbor.result_storages.no_storage'
Config.RESULT_STORAGE_STORES_UNSAFE = True
Config.RESULT_STORAGE_EXPIRATION_SECONDS = 0  # As per original comment

# Redis configuration for storage
Config.REDIS_STORAGE_SERVER_HOST = 'localhost'
Config.REDIS_STORAGE_SERVER_PORT = 6379
Config.REDIS_STORAGE_SERVER_DB = 0
Config.REDIS_STORAGE_SERVER_PASSWORD = None
Config.REDIS_STORAGE_IGNORE_ERRORS = True

# Redis configuration for queue
Config.REDIS_QUEUE_SERVER_HOST = 'localhost'
Config.REDIS_QUEUE_SERVER_PORT = 6379
Config.REDIS_QUEUE_SERVER_DB = 0
Config.REDIS_QUEUE_SERVER_PASSWORD = None

# Detectors configuration
Config.DETECTORS = [
    'thumbor.detectors.queued_detector.queued_complete_detector',
]
Config.FACE_DETECTOR_CASCADE_FILE = '/usr/share/opencv4/haarcascades/haarcascade_frontalface_alt.xml'
Config.QUEUED_DETECTOR_QUEUE_REDIS_HOST = 'localhost'
Config.QUEUED_DETECTOR_QUEUE_REDIS_PORT = 6379
Config.QUEUED_DETECTOR_QUEUE_REDIS_DB = 0
Config.QUEUED_DETECTOR_QUEUE_REDIS_PASSWORD = None
Config.REMOTECV_DETECTOR_QUEUE_NAME = 'Detect'
Config.DETECTOR_STORAGE = 'tc_redis.storages.redis_storage'

# RemoteCV integration
Config.REMOTECV_HOST = 'localhost'
Config.REMOTECV_PORT = 6379
Config.REMOTECV_DATABASE = 0
Config.REMOTECV_REDIS_HOST = 'localhost'
Config.REMOTECV_REDIS_PORT = 6379
Config.REMOTECV_REDIS_DATABASE = 0
Config.REMOTECV_REDIS_MODE = 'single_key'  # or 'per_image' for individual keys per image
Config.REMOTECV_TIMEOUT_SEC = 20

# HTTP Loader settings
Config.HTTP_LOADER_FORWARD_USER_AGENT = True
Config.HTTP_LOADER_DEFAULT_USER_AGENT = 'Thumbor/7.7.7'
Config.HTTP_LOADER_FORWARD_ALL_HEADERS = False
Config.HTTP_LOADER_TIMEOUT = 60
Config.HTTP_LOADER_MAX_CONN_PER_HOST = 30
Config.HTTP_LOADER_CONN_TIMEOUT = 30
Config.HTTP_LOADER_REQUEST_TIMEOUT = 60
Config.HTTP_LOADER_FOLLOW_REDIRECTS = True
Config.HTTP_LOADER_MAX_REDIRECTS = 5
Config.HTTP_LOADER_VALIDATE_CERTS = False
Config.HTTP_LOADER_CA_CERTS = None
Config.HTTP_LOADER_PROXY_HOST = None
Config.HTTP_LOADER_PROXY_PORT = None

# Loader
Config.LOADER = 'thumbor.loaders.http_loader'

# CORS configuration
Config.CORS_ALLOW_ORIGIN = '*'
Config.CORS_ALLOW_METHODS = ['GET', 'POST', 'OPTIONS']
Config.CORS_ALLOW_HEADERS = [
    'DNT',
    'X-CustomHeader',
    'Keep-Alive',
    'User-Agent',
    'X-Requested-With',
    'If-Modified-Since',
    'Cache-Control',
    'Content-Type'
]

# Optimizers
Config.OPTIMIZERS = [
    'thumbor.optimizers.jpegtran'
]
Config.JPEGTRAN_PATH = '/usr/bin/jpegtran'
Config.JPEGTRAN_SCANS_FILE = ''
Config.PROGRESSIVE_JPEG = True

# Filters
Config.FILTERS = [
    'thumbor.filters.brightness',
    'thumbor.filters.colorize',
    'thumbor.filters.contrast',
    'thumbor.filters.rgb',
    'thumbor.filters.round_corner',
    'thumbor.filters.quality',
    'thumbor.filters.noise',
    'thumbor.filters.watermark',
    'thumbor.filters.equalize',
    'thumbor.filters.fill',
    'thumbor.filters.sharpen',
    'thumbor.filters.strip_exif',
    'thumbor.filters.strip_icc',
    'thumbor.filters.frame',
    'thumbor.filters.grayscale',
    'thumbor.filters.rotate',
    'thumbor.filters.format',
    'thumbor.filters.max_bytes',
    'thumbor.filters.no_upscale',
    'thumbor.filters.saturation',
    'thumbor.filters.blur',
    'thumbor.filters.extract_focal',
    'thumbor.filters.focal',
    'thumbor.filters.proportion',
    'thumbor.filters.stretch'
]

# Engine
Config.ENGINE = 'thumbor.engines.pil'
Config.ENGINE_THREADPOOL_SIZE = 10

# Metrics
Config.METRICS = 'thumbor.metrics.logger_metrics'

# Process configuration
Config.THUMBOR_NUM_PROCESSES = int(os.environ.get('THUMBOR_NUM_PROCESSES', '4'))

# Error handling
Config.ERROR_HANDLER_MODULE = 'thumbor.error_handlers.sentry'
Config.ERROR_FILE_LOGGER = None
Config.ERROR_FILE_NAME_USE_CONTEXT = False

# Healthcheck
Config.HEALTHCHECK_ROUTE = '/healthcheck'

# Application settings
Config.APPLICATION_ADDRESS = ''  # Bind to all interfaces
Config.ENABLE_ETAGS = True
Config.MAX_ID_LENGTH = 32

# Threading
Config.THREADPOOL_SIZE = 10

# GC settings
Config.GC_INTERVAL = 60

# Sentry configuration (optional)
Config.SENTRY_DSN_URL = os.environ.get('SENTRY_DSN_URL', '')

# Azure specific settings
Config.USE_GIFSICLE_ENGINE = True
Config.FFMPEG_PATH = '/usr/bin/ffmpeg'
Config.CONVERT_PATH = '/usr/bin/convert'

# Additional settings for production
Config.SLOW_REQUEST_TIME_SECONDS = 10
Config.SEND_IF_MODIFIED_LAST_MODIFIED_HEADERS = True

# MemoryCache settings (for better performance in single container)
Config.STORAGE_EXPIRATION_SECONDS = 60 * 60 * 24 * 30  # 30 days
Config.STORES_CRYPTO_KEY_FOR_EACH_IMAGE = True

# Context settings
Config.IGNORE_SMART_ERRORS = False
Config.USE_SMART_DETECT = True
Config.ENABLE_SMART = True

# Detector storage settings for Redis
Config.DETECTOR_STORAGE_BUCKET = 'thumbor:detectors'
Config.REDIS_DETECTOR_STORAGE_KEY = 'thumbor:detectors:%(key)s'
